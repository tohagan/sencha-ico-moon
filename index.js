#!/usr/bin/env node

try {
	var fs = require('fs');
	var path = require('path');
	console.log(process.argv);
	
	if (process.argv.length !== 4) {
		console.info('Usage: ' + path.basename(process.argv[1]) + ' font-project.json font-name');
		process.exit(1);
	}
	
	var file = process.argv[2];
	var fontName = process.argv[3];
	if (!fs.existsSync(file)) {
		console.error(file + ': File not found');
	}

	var projJson = fs.readFileSync(file, 'utf8');
	var proj = JSON.parse(projJson);
	var icons = [
		"// Generated by https://github.com/tohagan/sencha-ico-moon",
		"",
		"@include icon-font('xxx', inline-font-files(",
		"  'xxx/xxx.woff', woff,",
		"  'xxx/xxx.ttf', truetype,",
		"  'xxx/xxx.svg', svg",
		"));",
		""
	].map(function(line) { return line.replace(/xxx/g, fontName); });

	proj.iconSets.forEach(function(iconSet) {
		iconSet.selection.forEach(function(icon) {
			if (icon.name && icon.name.length > 0) {
				icons.push("@include icon('ico-" + icon.name + "',\t" + icon.code + ", '" + fontName + "');");
			}
		});
	});

	var outFile = "_icons-" + fontName + ".scss";
	console.log("Writing " + outFile + " ...");
	fs.writeFileSync(outFile, icons.join('\n'), 'utf8');
	console.log();
	console.log("1. Copy fonts/ in your ZIP file to resources/sass/stylesheets/fonts/" + fontName + "/");
	console.log("2. Copy '" + outFile + "' file to resources/sass/" + outFile);
	console.log("3. Add to your resources/sass/app.scss file after sencha's @import commands" );
	console.log("@import '" + outFile + "'");
} catch (ex) {
    console.error(ex);
    process.exit(1);
}
